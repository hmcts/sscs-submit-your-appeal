#!groovy
properties(
        [[$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/submit-your-appeal'],
         pipelineTriggers([[$class: 'GitHubPushTrigger']])]
)

@Library("Infrastructure")

def product = "sscs"
def component = "tribunals-frontend"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withPipeline("nodejs", product, component) {

  before('securitychecks') {
    try {
      yarnBuilder.yarn('audit')
    } catch (error) {
      onMaster {
        slackSend(channel: '#sscs-tech', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }

  after('build') {
    yarnBuilder.yarn('build')
  }

  before('smoketest:preview') {
    // workaround to fix SIDAM whitelisting for PR AKS URLs
    try {
      def encodedServiceName = 'SSCS'
      def aksUrlToWhitelist = env.TEST_URL + '/authenticated'
      sh('curl -X PATCH https://idam-api.aat.platform.hmcts.net/testing-support/services/' + encodedServiceName +
        ' -H \'Content-Type: application/json\'' +
        ' -H \'cache-control: no-cache\'' +
        ' -d \'[{' +
          '"operation":"add",' +
          '"field":"redirect_uri",' +
          '"value":"' + aksUrlToWhitelist + '"' +
        '}]\'')
    } catch (err) {
      notifyBuildEvent channel: notificationsChannel, color: 'warning', message: 'Failed to update SIDAM PR whitelisting'
    }
  }

  enableDockerBuild()
  installCharts()
  enableAksStagingDeployment()
  disableLegacyDeploymentOnAAT()

  after("smoketest:preview") {
      stage('Application URLs') {
          def AppDevUrl = env.TEST_URL.replace("https", "http")
          AppDevUrl = AppDevUrl.replace("-staging.", ".")
          println "Application URL: " + AppDevUrl
          println "Healthcheck URL: " + AppDevUrl + "/health"
          println "Kudu URL: " + AppDevUrl.replace(".service.", ".scm.service.")
      }
  }
}
