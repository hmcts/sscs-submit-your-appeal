{"type":"auditAdvisory","data":{"resolution":{"id":1067417,"path":"node-sass","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.14.1","paths":["node-sass"]}],"metadata":null,"vulnerable_versions":">=2.0.0 <7.0.0","module_name":"node-sass","severity":"moderate","github_advisory_id":"GHSA-r8f7-9pfq-mjmv","cves":["CVE-2020-24025"],"access":"public","patched_versions":">=7.0.0","cvss":{"score":5.3,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"},"updated":"2022-02-10T11:35:22.000Z","recommendation":"Upgrade to version 7.0.0 or later","cwe":["CWE-295"],"found_by":null,"deleted":null,"id":1067417,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-24025\n- https://github.com/sass/node-sass/pull/567#issuecomment-656609236\n- https://github.com/sass/node-sass/issues/3067\n- https://github.com/advisories/GHSA-r8f7-9pfq-mjmv","created":"2022-02-09T22:22:24.000Z","reported_by":null,"title":"Improper Certificate Validation in node-sass","npm_advisory_id":null,"overview":"Certificate validation in node-sass 2.0.0 to 4.14.1 is disabled when requesting binaries even if the user is not specifying an alternative download path.","url":"https://github.com/advisories/GHSA-r8f7-9pfq-mjmv"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1075671,"path":"jsdom","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"15.2.1","paths":["jsdom"]}],"metadata":null,"vulnerable_versions":"<=16.4.0","module_name":"jsdom","severity":"moderate","github_advisory_id":"GHSA-f4c9-cqv8-9v98","cves":["CVE-2021-20066"],"access":"public","patched_versions":">=16.5.0","cvss":{"score":5.6,"vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"},"updated":"2022-06-22T18:50:50.000Z","recommendation":"Upgrade to version 16.5.0 or later","cwe":["CWE-1220"],"found_by":null,"deleted":null,"id":1075671,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-20066\n- https://www.tenable.com/security/research/tra-2021-05\n- https://github.com/jsdom/jsdom/issues/3124\n- https://github.com/advisories/GHSA-f4c9-cqv8-9v98","created":"2022-05-24T17:42:20.000Z","reported_by":null,"title":"Insufficient Granularity of Access Control in JSDom","npm_advisory_id":null,"overview":"JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.","url":"https://github.com/advisories/GHSA-f4c9-cqv8-9v98"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1081008,"path":"moment","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.29.3","paths":["moment","@hmcts/one-per-page>moment","@hmcts/div-idam-express-middleware>@hmcts/nodejs-logging>moment"]}],"metadata":null,"vulnerable_versions":">=2.18.0 <2.29.4","module_name":"moment","severity":"high","github_advisory_id":"GHSA-wc69-rhjr-hc9g","cves":["CVE-2022-31129"],"access":"public","patched_versions":">=2.29.4","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-07-11T19:26:42.000Z","recommendation":"Upgrade to version 2.29.4 or later","cwe":["CWE-400","CWE-1333"],"found_by":null,"deleted":null,"id":1081008,"references":"- https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n- https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n- https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\n- https://nvd.nist.gov/vuln/detail/CVE-2022-31129\n- https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/\n- https://github.com/advisories/GHSA-wc69-rhjr-hc9g","created":"2022-07-06T18:38:49.000Z","reported_by":null,"title":"Inefficient Regular Expression Complexity in moment","npm_advisory_id":null,"overview":"### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.","url":"https://github.com/advisories/GHSA-wc69-rhjr-hc9g"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1081008,"path":"@hmcts/one-per-page>moment","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.29.3","paths":["moment","@hmcts/one-per-page>moment","@hmcts/div-idam-express-middleware>@hmcts/nodejs-logging>moment"]}],"metadata":null,"vulnerable_versions":">=2.18.0 <2.29.4","module_name":"moment","severity":"high","github_advisory_id":"GHSA-wc69-rhjr-hc9g","cves":["CVE-2022-31129"],"access":"public","patched_versions":">=2.29.4","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-07-11T19:26:42.000Z","recommendation":"Upgrade to version 2.29.4 or later","cwe":["CWE-400","CWE-1333"],"found_by":null,"deleted":null,"id":1081008,"references":"- https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n- https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n- https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\n- https://nvd.nist.gov/vuln/detail/CVE-2022-31129\n- https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/\n- https://github.com/advisories/GHSA-wc69-rhjr-hc9g","created":"2022-07-06T18:38:49.000Z","reported_by":null,"title":"Inefficient Regular Expression Complexity in moment","npm_advisory_id":null,"overview":"### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.","url":"https://github.com/advisories/GHSA-wc69-rhjr-hc9g"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1081008,"path":"@hmcts/div-idam-express-middleware>@hmcts/nodejs-logging>moment","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.29.3","paths":["moment","@hmcts/one-per-page>moment","@hmcts/div-idam-express-middleware>@hmcts/nodejs-logging>moment"]}],"metadata":null,"vulnerable_versions":">=2.18.0 <2.29.4","module_name":"moment","severity":"high","github_advisory_id":"GHSA-wc69-rhjr-hc9g","cves":["CVE-2022-31129"],"access":"public","patched_versions":">=2.29.4","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-07-11T19:26:42.000Z","recommendation":"Upgrade to version 2.29.4 or later","cwe":["CWE-400","CWE-1333"],"found_by":null,"deleted":null,"id":1081008,"references":"- https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n- https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n- https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\n- https://nvd.nist.gov/vuln/detail/CVE-2022-31129\n- https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/\n- https://github.com/advisories/GHSA-wc69-rhjr-hc9g","created":"2022-07-06T18:38:49.000Z","reported_by":null,"title":"Inefficient Regular Expression Complexity in moment","npm_advisory_id":null,"overview":"### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.","url":"https://github.com/advisories/GHSA-wc69-rhjr-hc9g"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1070435,"path":"@hmcts/one-per-page>connect-redis>redis","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.8.0","paths":["@hmcts/one-per-page>connect-redis>redis"]}],"metadata":null,"vulnerable_versions":">=2.6.0 <3.1.1","module_name":"redis","severity":"high","github_advisory_id":"GHSA-35q2-47q7-3pc3","cves":["CVE-2021-29469"],"access":"public","patched_versions":">=3.1.1","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-05-31T23:27:01.000Z","recommendation":"Upgrade to version 3.1.1 or later","cwe":["CWE-400"],"found_by":null,"deleted":null,"id":1070435,"references":"- https://github.com/NodeRedis/node-redis/security/advisories/GHSA-35q2-47q7-3pc3\n- https://nvd.nist.gov/vuln/detail/CVE-2021-29469\n- https://github.com/NodeRedis/node-redis/commit/2d11b6dc9b9774464a91fb4b448bad8bf699629e\n- https://github.com/NodeRedis/node-redis/releases/tag/v3.1.1\n- https://security.netapp.com/advisory/ntap-20210611-0010/\n- https://github.com/advisories/GHSA-35q2-47q7-3pc3","created":"2021-04-27T15:56:03.000Z","reported_by":null,"title":"Potential exponential regex in monitor mode","npm_advisory_id":null,"overview":"### Impact\nWhen a client is in monitoring mode, the regex begin used to detected monitor messages could cause exponential backtracking on some strings. This issue could lead to a denial of service.\n\n### Patches\nThe problem was fixed in commit [`2d11b6d`](https://github.com/NodeRedis/node-redis/commit/2d11b6dc9b9774464a91fb4b448bad8bf699629e) and was released in version `3.1.1`.\n\n### References\n#1569 (GHSL-2021-026)","url":"https://github.com/advisories/GHSA-35q2-47q7-3pc3"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1081480,"path":"node-sass>sass-graph>scss-tokenizer","dev":false,"bundled":false,"optional":false},"advisory":{"findings":[{"version":"0.2.3","paths":["node-sass>sass-graph>scss-tokenizer"]}],"metadata":null,"vulnerable_versions":"<=0.4.2","module_name":"scss-tokenizer","severity":"high","github_advisory_id":"GHSA-7mwh-4pqv-wmr8","cves":["CVE-2022-25758"],"access":"public","patched_versions":"<0.0.0","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-07-13T20:01:12.000Z","recommendation":"None","cwe":["CWE-1333"],"found_by":null,"deleted":null,"id":1081480,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-25758\n- https://github.com/sasstools/scss-tokenizer/issues/45\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2936782\n- https://snyk.io/vuln/SNYK-JS-SCSSTOKENIZER-2339884\n- https://github.com/advisories/GHSA-7mwh-4pqv-wmr8","created":"2022-07-02T00:00:19.000Z","reported_by":null,"title":"Regular expression denial of service in scss-tokenizer","npm_advisory_id":null,"overview":"All versions of package scss-tokenizer are vulnerable to Regular Expression Denial of Service (ReDoS) via the loadAnnotation() function, due to the usage of insecure regex.","url":"https://github.com/advisories/GHSA-7mwh-4pqv-wmr8"}}}
