{"type":"auditAdvisory","data":{"resolution":{"id":1548,"path":"compression-webpack-plugin>serialize-javascript","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.1.2","paths":["compression-webpack-plugin>serialize-javascript","copy-webpack-plugin>serialize-javascript"]}],"id":1548,"created":"2020-08-11T17:27:06.358Z","updated":"2020-08-11T17:29:23.710Z","deleted":null,"title":"Remote Code Execution","found_by":{"link":"","name":"Unknown","email":""},"reported_by":{"link":"","name":"Unknown","email":""},"module_name":"serialize-javascript","cves":[],"vulnerable_versions":"<3.1.0","patched_versions":">=3.1.0","overview":"`serialize-javascript` prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\".  \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the bar key. This requires the attacker to control the values of both foo and bar and guess the value of <UID>. The UID has a keyspace of approximately 4 billion making it a realistic network attack.  \n  \nThe following proof-of-concept calls console.log() when the running eval():  \n`eval('('+ serialize({\"foo\": /1\" + console.log(1)/i, \"bar\": '\"@__R-<UID>-0__@'}) + ')');`","recommendation":"Upgrade to version 3.1.0 or later.","references":"- [GitHub Advisory](https://github.com/advisories/GHSA-hxcc-f52p-wc94)","access":"public","severity":"high","cwe":"CWE-","metadata":{"module_type":"","exploitability":4,"affected_components":""},"url":"https://npmjs.com/advisories/1548"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1548,"path":"copy-webpack-plugin>serialize-javascript","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.1.2","paths":["compression-webpack-plugin>serialize-javascript","copy-webpack-plugin>serialize-javascript"]}],"id":1548,"created":"2020-08-11T17:27:06.358Z","updated":"2020-08-11T17:29:23.710Z","deleted":null,"title":"Remote Code Execution","found_by":{"link":"","name":"Unknown","email":""},"reported_by":{"link":"","name":"Unknown","email":""},"module_name":"serialize-javascript","cves":[],"vulnerable_versions":"<3.1.0","patched_versions":">=3.1.0","overview":"`serialize-javascript` prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\".  \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the bar key. This requires the attacker to control the values of both foo and bar and guess the value of <UID>. The UID has a keyspace of approximately 4 billion making it a realistic network attack.  \n  \nThe following proof-of-concept calls console.log() when the running eval():  \n`eval('('+ serialize({\"foo\": /1\" + console.log(1)/i, \"bar\": '\"@__R-<UID>-0__@'}) + ')');`","recommendation":"Upgrade to version 3.1.0 or later.","references":"- [GitHub Advisory](https://github.com/advisories/GHSA-hxcc-f52p-wc94)","access":"public","severity":"high","cwe":"CWE-","metadata":{"module_type":"","exploitability":4,"affected_components":""},"url":"https://npmjs.com/advisories/1548"}}}
